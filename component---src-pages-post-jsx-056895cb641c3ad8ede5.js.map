{"version":3,"sources":["webpack:///./src/components/post-link.jsx","webpack:///./src/pages/post.jsx"],"names":["PostLink","post","to","fields","slug","dateShort","className","frontmatter","title","postTypes","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","date","map","key","id","pageQuery"],"mappings":"2FAAA,qCAceA,IAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,4BACE,kBAAC,OAAD,CAAMC,GAAID,EAAKE,OAAOC,MACnBH,EAAKE,OAAOE,UACZ,KACD,0BAAMC,UAAU,4BAA4BL,EAAKM,YAAYC,OAC5D,KACD,gCAAMP,EAAKE,OAAOM,UAAU,GAA5B,S,kCCVN,8GA2BeC,UAtBG,SAAC,GAIZ,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAKpBC,QAAO,SAACC,GAAD,QAAYA,EAAKC,KAAKd,OAAOe,MAA0C,UAAlCF,EAAKC,KAAKd,OAAOM,UAAU,MACvEU,KAAI,SAACH,GAAD,OAAU,kBAAC,IAAD,CAAUI,IAAKJ,EAAKC,KAAKI,GAAIpB,KAAMe,EAAKC,UAEzD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKT,MAAM,YACX,yBAAKF,UAAU,WACb,uCACA,4BACGK,MAQJ,IAAMW,EAAS","file":"component---src-pages-post-jsx-056895cb641c3ad8ede5.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nconst PostLink = ({ post }) => (\n  <li>\n    <Link to={post.fields.slug}>\n      {post.fields.dateShort}\n      {': '}\n      <span className=\"has-text-weight-semibold\">{post.frontmatter.title}</span>\n      {'  '}\n      <em>({post.fields.postTypes[0]})</em>\n    </Link>\n  </li>\n);\nexport default PostLink;\n","import React from 'react';\nimport PostLink from '../components/post-link';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    // Make sure there's a date field and that the filename doesn't include 'draft'.\n    .filter((edge) => !!edge.node.fields.date && edge.node.fields.postTypes[1] !== 'draft')\n    .map((edge) => <PostLink key={edge.node.id} post={edge.node} />);\n\n  return (\n    <Layout>\n      <SEO title=\"Archive\" />\n      <div className=\"content\">\n        <h1>Archive</h1>\n        <ul>\n          {Posts}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [fields___slug] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            date(formatString: \"MMM DD, YYYY\")\n            dateShort:date\n            postTypes\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}